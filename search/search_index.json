{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Refersion\n\n\nThank you for being a part of the Refersion developer community.  This isn't a simple referral tracking system.  Refersion is the most powerful Affiliate Program available and it is waiting for \nyou\n to unlock that power.  With the \nGraphQL API\n, the entire database of information is at your fingertips.  You can track things, generate reports, and view all of the data Refersion has for your Affiliate program. \n\n\nThere are three parts of the Refersion system:\n\n\nThe first is the \nTracking Documentation\n.  The Tracking Document shows you how to setup refersion  If you follow the link above for the Tracking Documentation, you will learn how to include the Javascript code on your pages, insert your API keys, and track visists.\n\n\nThe second part of the system is the \nREST\n API.  This API allows you to access functions, creating new customers, etc.  REST is easily accessible using most modern programming languages.  Our API is designed to have predictable, resource-orientated URLs and to use HTTP response codes to indicate API eerrors.  In addition, valid \nJSON\n will be returned in all responses from the API, including errors.  Please refer to our \nAPI docs\n for additional information.  It will have the latest documentation for all end points as the Refersion API is revised over time.\n\n\nThe third part of the system is \nGraphQL\n.  GraphQL allows you view all of the data inside of the database.  The entire database of information is available to you.  See the \nOverview\n section below for additional information.", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-refersion", 
            "text": "Thank you for being a part of the Refersion developer community.  This isn't a simple referral tracking system.  Refersion is the most powerful Affiliate Program available and it is waiting for  you  to unlock that power.  With the  GraphQL API , the entire database of information is at your fingertips.  You can track things, generate reports, and view all of the data Refersion has for your Affiliate program.   There are three parts of the Refersion system:  The first is the  Tracking Documentation .  The Tracking Document shows you how to setup refersion  If you follow the link above for the Tracking Documentation, you will learn how to include the Javascript code on your pages, insert your API keys, and track visists.  The second part of the system is the  REST  API.  This API allows you to access functions, creating new customers, etc.  REST is easily accessible using most modern programming languages.  Our API is designed to have predictable, resource-orientated URLs and to use HTTP response codes to indicate API eerrors.  In addition, valid  JSON  will be returned in all responses from the API, including errors.  Please refer to our  API docs  for additional information.  It will have the latest documentation for all end points as the Refersion API is revised over time.  The third part of the system is  GraphQL .  GraphQL allows you view all of the data inside of the database.  The entire database of information is available to you.  See the  Overview  section below for additional information.", 
            "title": "Welcome to Refersion"
        }, 
        {
            "location": "/graphql-api/overview/", 
            "text": "GraphQL Overview\n\n\nIntroduction\n\n\nThe Refersion GraphQL API allows you to query your dataset of affiliate activity through a unified interface. You don't have to depend on Refersion creating the insight from the data, you can mine the dataset for exactly what you need.\n\n\nWhat is GraphQL?\n\n\nGraphQL is a new way to think about building and querying APIs. Rather than construct several REST requests to fetch data that you\u2019re interested in, you can often make a single call to fetch the information you need. Additionally you can specify exactly which fields you want included in the response.\n\n\nExample request and response:\n\n\n\n\n\n\n\n\n\nGraphQL is, above all, a querying language, and the format of the query you send matches the data you receive. The language has a schema that strongly types the exchange between client and server.\n\n\nRunning Queries\n\n\nGraphQL is hierarchical. Fields between curly braces \u2013 which are also at the next level of indent \u2013 are part of the enclosing type. For example, \nid\n and \nemail\n are fields available as part of the \naffiliate\n type and \ncommission\n is a part of \noffer\n.\n\n\nWhy GraphQL?\n\n\nWe\u2019re supporting GraphQL because it offers much more flexibility than a traditional REST interface. GraphQL natively supports performing an introspection query which allows the API to more fully discoverable and easier to integrate against. The ability to define and specify precisely the data you want for your integration is a powerful advantage over the existing REST endpoints. Through fragments and template variables it simplifies many aspects of the client-side integration process. Additionally, because it\u2019s a recognized spec, there are many client libraries and tools to assist you in quickly getting up and running.\n\n\nAdditional Resources\n\n\nBelow is some optional reading material that might help you go deeper into the GraphQL ecosystem:\n\n\n\n\nGraphQL Specification\n\n\nIntroduction to GraphQL\n\n\nThe Fullstack Tutorial for GraphQL\n\n\nList of GraphQL Tools", 
            "title": "Overview"
        }, 
        {
            "location": "/graphql-api/overview/#graphql-overview", 
            "text": "", 
            "title": "GraphQL Overview"
        }, 
        {
            "location": "/graphql-api/overview/#introduction", 
            "text": "The Refersion GraphQL API allows you to query your dataset of affiliate activity through a unified interface. You don't have to depend on Refersion creating the insight from the data, you can mine the dataset for exactly what you need.", 
            "title": "Introduction"
        }, 
        {
            "location": "/graphql-api/overview/#what-is-graphql", 
            "text": "GraphQL is a new way to think about building and querying APIs. Rather than construct several REST requests to fetch data that you\u2019re interested in, you can often make a single call to fetch the information you need. Additionally you can specify exactly which fields you want included in the response.  Example request and response:     GraphQL is, above all, a querying language, and the format of the query you send matches the data you receive. The language has a schema that strongly types the exchange between client and server.", 
            "title": "What is GraphQL?"
        }, 
        {
            "location": "/graphql-api/overview/#running-queries", 
            "text": "GraphQL is hierarchical. Fields between curly braces \u2013 which are also at the next level of indent \u2013 are part of the enclosing type. For example,  id  and  email  are fields available as part of the  affiliate  type and  commission  is a part of  offer .", 
            "title": "Running Queries"
        }, 
        {
            "location": "/graphql-api/overview/#why-graphql", 
            "text": "We\u2019re supporting GraphQL because it offers much more flexibility than a traditional REST interface. GraphQL natively supports performing an introspection query which allows the API to more fully discoverable and easier to integrate against. The ability to define and specify precisely the data you want for your integration is a powerful advantage over the existing REST endpoints. Through fragments and template variables it simplifies many aspects of the client-side integration process. Additionally, because it\u2019s a recognized spec, there are many client libraries and tools to assist you in quickly getting up and running.", 
            "title": "Why GraphQL?"
        }, 
        {
            "location": "/graphql-api/overview/#additional-resources", 
            "text": "Below is some optional reading material that might help you go deeper into the GraphQL ecosystem:   GraphQL Specification  Introduction to GraphQL  The Fullstack Tutorial for GraphQL  List of GraphQL Tools", 
            "title": "Additional Resources"
        }, 
        {
            "location": "/graphql-api/getting-started/", 
            "text": "Getting Started\n\n\nIn order to make API requests, you will need an active Refersion account.  You can start your free trial account \nhere\n or you can email \nhelpme@refersion.com\n for more details. \n\n\nBase URL\n\n\nAll URLS referenced in the documentation have the following base:\n\n\nhttps://graphql.refersion.com\n\n\n\n\n\nSSL/HTTPS\n\n\nThe Refersion GraphQL API is serveed over HTTPS.  To ensure data privacy, unencrypted HTTP is not supported.\n\n\nAuthentication\n\n\nIn order to make calls to our API you need to include your API key along with the request.  You may obtain your API key from your \nAPI Settings\n page while logged in.  \nNote, if you are not logged in following this link will lead to a 404 error page.\n\n\nWe look for your API Key in the Authentication header.\n\n\n$ curl \nhttps://graphql.refersion.com\n\n  -H \nAuthorization: Bearer [YOUR KEY]\n\n\n\n\n\n\n\n\nImportant\n\n\nIt is very important to store your API key in a private and secure location. Sharing your API key is strictly prohibited.\n\n\n\n\nQuota \n Usage\n\n\nEach request will return your current usage in the response headers.  \n\n\n\n\n\n\n\n\nHeader\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nX-Quota Limit\n\n\nYour Current Request Limit\n\n\n\n\n\n\nX-Quota Remaining\n\n\nNumber of Remaining requests in the current period\n\n\n\n\n\n\nX-Quota-Reset\n\n\nThe unix timestamp (seconds, UTC) of the start of the next quota period\n\n\n\n\n\n\n\n\nExample Query\n\n\nThe query below also demonstrates how to used \nGraphQL\n fragments on \naffiliate\n to query for information specific to sub-type.  In this case, we request a list of affiliates along with the respective offer that they are assigned to.  \n\n\nbase\n \n{\n\n  \naffiliates\n(\nlimit\n:2\n)\n \n{\n\n    \nid\n\n    \nemail\n\n    \noffer\n \n{\n\n      \ncommission\n\n      \ntype\n\n    \n}\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\n\nImportant\n\n\nQuery type must be \"base\".\n \nPlease make sure to start every query with the \"base\" query tupe as seen above. Currently this is the only supported query type.\n\n\n\n\nThis response returns:\n\n\n{\n\n       \ndata\n:\n \n{\n\n           \naffiliates\n:\n \n[\n\n               \n{\n\n                    \nid\n:\n \n444\n,\n\n                    \nemail\n:\n \njane.verde@aol.com\n,\n\n                    \noffer\n:\n \n{\n\n                         \ncommission\n:\n \n10\n,\n\n                         \ntype\n:\n \nFLAT_RATE\n\n                    \n}\n\n               \n},\n\n               \n{\n\n                    \nid\n:\n \n419\n,\n\n                    \nemail\n:\n \nmike.rogers@hotmail.com\n,\n\n                    \noffer\n:\n \n{\n\n                         \ncommission\n:\n \n10\n,\n\n                         \ntype\n:\n \nFLAT_RATE\n\n                    \n}\n\n               \n}\n\n          \n]\n\n      \n}\n\n \n}", 
            "title": "Getting Started"
        }, 
        {
            "location": "/graphql-api/getting-started/#getting-started", 
            "text": "In order to make API requests, you will need an active Refersion account.  You can start your free trial account  here  or you can email  helpme@refersion.com  for more details.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/graphql-api/getting-started/#base-url", 
            "text": "All URLS referenced in the documentation have the following base:  https://graphql.refersion.com", 
            "title": "Base URL"
        }, 
        {
            "location": "/graphql-api/getting-started/#sslhttps", 
            "text": "The Refersion GraphQL API is serveed over HTTPS.  To ensure data privacy, unencrypted HTTP is not supported.", 
            "title": "SSL/HTTPS"
        }, 
        {
            "location": "/graphql-api/getting-started/#authentication", 
            "text": "In order to make calls to our API you need to include your API key along with the request.  You may obtain your API key from your  API Settings  page while logged in.   Note, if you are not logged in following this link will lead to a 404 error page.  We look for your API Key in the Authentication header.  $ curl  https://graphql.refersion.com \n  -H  Authorization: Bearer [YOUR KEY]    Important  It is very important to store your API key in a private and secure location. Sharing your API key is strictly prohibited.", 
            "title": "Authentication"
        }, 
        {
            "location": "/graphql-api/getting-started/#quota-usage", 
            "text": "Each request will return your current usage in the response headers.       Header  Description      X-Quota Limit  Your Current Request Limit    X-Quota Remaining  Number of Remaining requests in the current period    X-Quota-Reset  The unix timestamp (seconds, UTC) of the start of the next quota period", 
            "title": "Quota &amp; Usage"
        }, 
        {
            "location": "/graphql-api/getting-started/#example-query", 
            "text": "The query below also demonstrates how to used  GraphQL  fragments on  affiliate  to query for information specific to sub-type.  In this case, we request a list of affiliates along with the respective offer that they are assigned to.    base   { \n   affiliates ( limit :2 )   { \n     id \n     email \n     offer   { \n       commission \n       type \n     } \n   }  }    Important  Query type must be \"base\".  \nPlease make sure to start every query with the \"base\" query tupe as seen above. Currently this is the only supported query type.   This response returns:  { \n        data :   { \n            affiliates :   [ \n                { \n                     id :   444 , \n                     email :   jane.verde@aol.com , \n                     offer :   { \n                          commission :   10 , \n                          type :   FLAT_RATE \n                     } \n                }, \n                { \n                     id :   419 , \n                     email :   mike.rogers@hotmail.com , \n                     offer :   { \n                          commission :   10 , \n                          type :   FLAT_RATE \n                     } \n                } \n           ] \n       } \n  }", 
            "title": "Example Query"
        }, 
        {
            "location": "/rest-api/overview/", 
            "text": "REST API Overview\n\n\n\n\nImportant\n\n\nThis is a legacy API. Going forward, we will slowly work to migrate clients over to our new GraphQL API in order to prevent interruptions.\n\n\n\n\nThe Refersion API is organized around REST, which is easily accessible using most modern programming languages. Our API is designed to have predictable, resource-oriented URLs and to use HTTP response codes to indicate API errors. In addition, valid JSON will be returned in all responses from the API, including errors.\n\n\nView REST API Docs (Legacy)", 
            "title": "Overview"
        }, 
        {
            "location": "/rest-api/overview/#rest-api-overview", 
            "text": "Important  This is a legacy API. Going forward, we will slowly work to migrate clients over to our new GraphQL API in order to prevent interruptions.   The Refersion API is organized around REST, which is easily accessible using most modern programming languages. Our API is designed to have predictable, resource-oriented URLs and to use HTTP response codes to indicate API errors. In addition, valid JSON will be returned in all responses from the API, including errors.  View REST API Docs (Legacy)", 
            "title": "REST API Overview"
        }
    ]
}